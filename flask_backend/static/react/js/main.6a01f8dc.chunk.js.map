{"version":3,"sources":["components/TABLE.module.css","subStyle.module.css","components/LabeledInput.js","components/GCN_TABLE.js","components/EVENT_TABLE.js","components/CIRC_TABLE.js","components/OBS_TABLE.js","components/NOTICE_TABLE.js","components/ADMIN.js","components/LISTITEMS.js","App.js","serviceWorker.js","index.js","components/LabeledInput.module.css"],"names":["module","exports","LabeledInput","disabled","label","name","onChange","placeholder","value","labelClassName","clsx","styles","Label","LabelDisabled","className","title","aria-label","Input","InputRow","children","GCN_TABLE","props","getDatabase","fetch","then","response","json","setState","circulars","data","catch","err","console","error","events","cellRenderer_cir","rowData","cirNum","rowIndex","state","filter","element","evtid","id","length","cellRenderer_evt","evtName","event","cellRenderer_obs","detector","telescope","cellRenderer_mm","messenger","wavelength","cellRenderer_mail","href","sender","target","rel","class","rowRenderer","prevProps","index","style","key","selectedIdx","body","display","flexDirection","defaultTableRowRenderer","width","height","color","fontWeight","backgroundColor","Dialog","open","cirClose","maxWidth","aria-labelledby","aria-describedby","DialogTitle","fontSize","subject","DialogContent","DialogContentText","overflow","whiteSpace","wordWrap","DialogActions","Button","onClick","_onCloseClick","autoFocus","rowRendererEvt","selectedEvtIdx","circulars_selected","events_selected","sortBy","sortByEvt","sortDirection","SortDirection","DESC","sortDirectionEvt","scrollToIndex","undefined","enteredIdx","enteredEvent","locType","showEvt","showCir","grb","gw","nu","others","radio","optical","xRay","gammaRay","HE","VHE","init","_initDatabase","bind","_sort","_sortList","_sortEvt","_sortEvtList","_headerRenderer","_headerRendererEvt","_showSelectedType","_showSelectedEM","_rowClassName","_onRowClick","_onRowClickEvt","_onScrollToRowChange","_onHeaderClick","_searchEvent","_updatingButtons","this","sortedCirculars","sort","a","b","parseInt","sortedEvents","a_date","split","b_date","slice","dataKey","rowGetter_circular","_getDatum_circular","rowGetter_event","_getDatum_event","cboxContainer","cboxLabel","ksCboxtags","checked","type","for","ksCboxMW","paddingTop","float","thumbStyle","borderRadius","trackStyle","colors","activeThumb","base","inactiveThumb","active","hover","inactive","onToggle","disableHeight","headerHeight","rowHeight","rowCount","rowGetter","onRowClick","onHeaderClick","rowClassName","disableSort","cellRenderer","textIndent","cursor","headerRenderer","ordered","Index","selectedCircular","Math","max","isNaN","filtered","eventType","circular","tempCir","headerRow","evenRow","oddRow","indexOf","getBody","trueIdx","i","len","Component","EVENT_TABLE","db","reverse","editDialog","TextField","margin","fullWidth","paddingBottom","trigger","ra","raHMS","dec","decDMS","_onRemoveClick","db_selected","searchText","_searchFor","_sortData","e","scrollTo","preventDefault","getAttribute","removed","splice","removed_db","mode","method","JSON","stringify","headers","log","_getDatum","_headerRender","CIRC_TABLE","obs","obsid","InputLabel","Select","native","_onValChange","map","_onModifyClick","updated_db","forEach","updatedObs","mwid","_copyDatabase","OBS_TABLE","tel","dtr","mw","mm","fullName","MenuItem","addDialog","_onAddClick","_onAddDiaClick","sorted_db","full_name","db_EM","added_db","unshift","searchCirs","removeDialog","marginLeft","marginRight","NOTICE_TABLE","mission","ADMIN","adminTable","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","adminListItems","App","checkPwd","pwd","enteredPwd","adminMode","adminDia","searchTable","selectedTable","textContent","modeChange","classes","root","AppBar","position","appBar","appBarShift","Toolbar","toolbar","Typography","component","variant","noWrap","IconButton","edge","menuButton","hide","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","Divider","List","content","contentShift","Container","CssBaseline","noValidate","required","autoComplete","size","evt","currentTarget","Box","pt","align","withStyles","theme","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","spacing","flexGrow","flexShrink","alignItems","padding","mixins","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"js/main.6a01f8dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerRow\":\"TABLE_headerRow__hTZ8t\",\"evenRow\":\"TABLE_evenRow__3bsTn\",\"oddRow\":\"TABLE_oddRow__3WOzJ\",\"headerColumn\":\"TABLE_headerColumn__2RI-o\",\"cboxContainer\":\"TABLE_cboxContainer__3-N6R\",\"cboxLabel\":\"TABLE_cboxLabel__1-7m-\",\"ksCboxtags\":\"TABLE_ksCboxtags__1qD4s\",\"ksCboxMW\":\"TABLE_ksCboxMW__264RV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"subStyle_paper__2AgAp\"};","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styles from './LabeledInput.module.css';\n\n\nexport function LabeledInput({\n  disabled,\n  label,\n  name,\n  onChange,\n  placeholder,\n  value,\n}) {\n  const labelClassName = clsx(styles.Label, {\n    [styles.LabelDisabled]: disabled,\n  });\n\n  return (\n    <div className={styles.LabeledInput}>\n      <label className={labelClassName} title={label}>\n        {label}\n      </label>\n      <input\n        aria-label={label}\n        className={styles.Input}\n        name={name}\n        placeholder={placeholder}\n        onChange={onChange}\n        value={value}\n        disabled={disabled}\n      />\n    </div>\n  );\n}\nLabeledInput.propTypes = {\n  disabled: PropTypes.bool,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.any,\n};\n\nexport function InputRow({children}) {\n  return <div className={styles.InputRow}>{children}</div>;\n}\n\n","/** @flow */\n\nimport React, { Component } from 'react';\nimport {Table, Column, AutoSizer, defaultTableRowRenderer, SortDirection, SortIndicator} from 'react-virtualized';\nimport 'react-virtualized/styles.css';\nimport { LabeledInput, InputRow } from './LabeledInput'\nimport styles from './TABLE.module.css'\nimport ToggleButton from 'react-toggle-button'\nimport CachedIcon from '@material-ui/icons/Cached'\nimport { CoffeeLoading } from 'react-loadingg';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nclass GCN_TABLE extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            circulars: [],\n            circulars_selected: [],\n            events: [],\n            events_selected: [],\n            sortBy: \"id\",\n            sortByEvt: \"event\",\n            body: [],\n            sortDirection: SortDirection.DESC,\n            sortDirectionEvt: SortDirection.DESC,\n            selectedIdx: -1 ,\n            selectedEvtIdx: -1,\n            scrollToIndex: undefined,\n            enteredIdx: undefined,\n            enteredEvent: undefined,\n            locType: true,\n            showEvt: true,\n            showCir: true,\n            grb: true,\n            gw: true,\n            nu: true,\n            others: true,\n            cirClose: false,\n            radio: false,\n            optical: false,\n            xRay: false,\n            gammaRay: false,\n            HE: false,\n            VHE: false,\n            init: false,\n        };\n\n        this._initDatabase = this._initDatabase.bind(this);\n\n        this._sort = this._sort.bind(this);\n        this._sortList = this._sortList.bind(this);\n        this._sortEvt = this._sortEvt.bind(this);\n        this._sortEvtList = this._sortEvtList.bind(this);\n        \n        this._headerRenderer = this._headerRenderer.bind(this);\n        this._headerRendererEvt = this._headerRendererEvt.bind(this);\n        \n        this._showSelectedType = this._showSelectedType.bind(this)\n        this._showSelectedEM = this._showSelectedEM.bind(this)\n        \n        this._rowClassName = this._rowClassName.bind(this);\n        \n        this._onRowClick = this._onRowClick.bind(this);\n        this._onRowClickEvt = this._onRowClickEvt.bind(this);\n        this._onScrollToRowChange = this._onScrollToRowChange.bind(this);\n        this._onCloseClick = this._onCloseClick.bind(this);\n        this._onHeaderClick = this._onHeaderClick.bind(this);\n        \n        this._searchEvent = this._searchEvent.bind(this);\n        \n        this._updatingButtons = this._updatingButtons.bind(this);\n\n    \n    }\n\n    componentDidMount() {\n        this.getDatabase();\n    }\n\n    getDatabase = () => {\n        fetch('circular')\n        .then(response => response.json())\n        .then(response => this.setState({circulars: response.data}))\n        .catch(err => console.error(err))\n\n        fetch('event')\n        .then(response => response.json())\n        .then(response => this.setState({events: response.data}))\n        .catch(err => console.error(err))\n\n    }\n\n    getBody({rowData}) {\n        fetch('cbody/'+rowData.id)\n        .then(response => response.json())\n        .then(response => this.setState({body: response.data}))\n        .catch(err => console.error(err))\n    }\n\n    _initDatabase() {\n        const { circulars } = this.state\n        if (circulars.length !== 0){\n            this._sortList()\n            this._sortEvtList()\n            this.setState({init:true})\n        }\n        \n    }\n\n    _sort({ sortBy, sortDirection }) {\n        this._sortList()\n        this.setState({ sortBy, sortDirection});\n    }\n\n    _sortEvt({ sortBy, sortDirection }) {\n        this._sortEvtList()\n        this.setState({ sortByEvt:sortBy, sortDirectionEvt:sortDirection});\n    }\n\n    _sortList(){\n        const { sortDirection } = this.state\n        const { circulars } = this.state\n        \n        const sortedCirculars = circulars.sort(function(a, b){\n            if (sortDirection === SortDirection.DESC){\n                return parseInt(b.id, 10) - parseInt(a.id, 10)\n            } else {\n                return parseInt(a.id, 10) - parseInt(b.id, 10)\n            }\n        })\n\n        this.setState({circulars: sortedCirculars})\n\n        const {circulars_selected} = this.state\n\n        if (circulars_selected.length === 0){\n            this.setState({circulars_selected: sortedCirculars})\n        } else {\n            this.setState({circulars_selected:\n                circulars_selected.sort(\n                function(a, b){\n                    if (sortDirection === SortDirection.DESC){\n                        return parseInt(a.id, 10) - parseInt(b.id, 10)\n                    } else {\n                        return parseInt(b.id, 10) - parseInt(a.id, 10)\n                    }\n                })\n            })\n        }\n    }\n\n    _sortEvtList(){\n        const { sortDirectionEvt } = this.state\n        const { events } = this.state\n        const sortedEvents = events.sort(function(a, b){\n            var a_date = a.event.split(' ');\n            var b_date = b.event.split(' ');\n            if (a_date[0] === 'G') {\n                return 0\n            } else if (b_date[0] === 'G') {\n                return -1\n            } else if (sortDirectionEvt === SortDirection.DESC){\n                return (parseInt(b_date[1].slice(0, 6), 10) - parseInt(a_date[1].slice(0, 6), 10));\n            } else {\n                return (parseInt(a_date[1].slice(0, 6), 10) - parseInt(b_date[1].slice(0, 6), 10));\n            }\n        })\n        \n        this.setState({events:sortedEvents})\n            \n        const {events_selected} = this.state\n\n        if (events_selected.length === 0){\n            this.setState({events_selected: sortedEvents})\n        } else {\n            this.setState({events_selected:\n                events_selected.sort(\n                function(a, b){\n                    var a_date = a.event.split(' ');\n                    var b_date = b.event.split(' ');\n                    if (a_date[0] === 'G') {\n                        return 0\n                    } else if (b_date[0] === 'G') {\n                        return -1\n                    } else if (sortDirectionEvt === SortDirection.DESC){\n                        return (parseInt(a_date[1].slice(0, 6), 10) - parseInt(b_date[1].slice(0, 6), 10));\n                    } else {\n                        return (parseInt(b_date[1].slice(0, 6), 10) - parseInt(a_date[1].slice(0, 6), 10));\n                    }\n                \n                })\n            }) \n        }\n\n    }\n\n    _headerRenderer({ label, dataKey, sortBy, sortDirection }) {\n        return (\n            <div>\n            { label }\n            { sortBy === dataKey && <SortIndicator sortDirection={sortDirection} />}\n            </div>\n        );\n    }\n\n\n    _headerRendererEvt({ label, dataKey, sortBy, sortDirection }) {\n        return (\n            <div>\n            { label }\n            { sortBy === dataKey && <SortIndicator sortDirection={sortDirection} />}\n            </div>\n        );\n    }\n\n\n    cellRenderer_cir = ({ rowData, rowIndex }) => {\n        const { circulars } = this.state\n        const cirNum = circulars.filter((element) => {return (element.evtid === rowData.id)})\n        return <div>{cirNum.length}</div>\n    };\n\n    cellRenderer_evt = ({ rowData, rowIndex }) => {\n        const { events } = this.state\n        if (rowData.evtid!==999999 ) {\n            const evtName = events.filter((element) => {return (element.id === rowData.evtid)})[0]\n            return <div>{evtName.event}</div>\n        } else {\n            return <div></div>\n        }\n    };\n\n    cellRenderer_obs = ({ rowData, rowIndex }) => {\n        if (rowData.detector === null) {\n            return <div>{rowData.telescope}</div>\n        } else {\n            return <div>{rowData.telescope}/{rowData.detector}</div>\n        }\n    };\n\n    cellRenderer_mm = ({ rowData, rowIndex }) => {\n\n        if (rowData.messenger === 'EM') {\n            return <div>{rowData.wavelength}</div>    \n        } else {\n            return <div>{rowData.messenger}</div>\n        }\n    };\n\n    cellRenderer_mail = ({ rowData, rowIndex }) => {\n        return (\n            <div>\n            <a href={`mailto:${rowData.sender}`}\n            target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fa fa-envelope-o\"></i></a>\n            </div>\n        )\n\n    };\n\n    rowRenderer = prevProps => {\n        const { index, style, key, rowData, className } = prevProps\n        const { selectedIdx, body } = this.state\n\n        if (index === selectedIdx && body.length !== 0) {\n            return (\n            <div\n            style={{ ...style, display: \"flex\", flexDirection: \"column\" }}\n            key={key}\n            className={className}\n            >\n            {defaultTableRowRenderer({\n            ...prevProps,\n            style: { width: style.width, height: style.height, color:'white', fontWeight: \"bold\", backgroundColor: '#5c6bc0'}\n            })}\n            <Dialog\n            open={ this.state.cirClose }\n            maxWidth={\"md\"}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\"><div style={{fontSize:\"0.9em\"}}>{rowData.subject}</div></DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                <pre style={{overflow: \"auto\", whiteSpace: \"pre-wrap\", wordWrap: \"break-word\"}}>\n                {body[0].body}</pre><br/><br/>\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={this._onCloseClick} color=\"primary\" autoFocus>\n                Close\n                </Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n        } else{\n            return defaultTableRowRenderer({...prevProps, style:{...style}});    \n        }\n    };\n\n    rowRendererEvt = prevProps => {\n        const { index, style } = prevProps\n        const { selectedEvtIdx } = this.state\n\n        if (index === selectedEvtIdx) {\n            return defaultTableRowRenderer({...prevProps, style:{...style, color:'white', fontWeight: \"bold\", backgroundColor: '#5c6bc0'}})\n        } else {\n            return defaultTableRowRenderer({...prevProps, style:{...style}});    \n        }\n    };\n\n    render() {\n\n        const { circulars, circulars_selected, events_selected, sortBy, sortByEvt, sortDirection, sortDirectionEvt, scrollToIndex, enteredIdx, enteredEvent, init, locType } = this.state\n\n        const { grb, gw, nu, others, radio, optical, xRay, gammaRay, HE, VHE } = this.state\n\n        const _getDatum_circular = index => circulars_selected[index % circulars_selected.length];\n        \n        const rowGetter_circular = ({ index }) => _getDatum_circular(index);\n\n        const _getDatum_event = index => events_selected[index % events_selected.length];\n        \n        const rowGetter_event = ({ index }) => _getDatum_event(index);\n\n        if (init===false){\n            this._initDatabase()\n\n        } else {\n            this._updatingButtons()\n        }\n\n        if (circulars.length === 0){\n            return <CoffeeLoading />\n        } else {\n            return (\n            <div style={{maxWidth:\"1250px\"}}>\n            <InputRow>\n            <div class={ styles.cboxContainer }>\n            <LabeledInput\n                label=\"Search for\"\n                name=\"searchEvent\"\n                placeholder=\"e.g., GRB 190114C\"\n                onChange={this._searchEvent}\n                value={enteredEvent || ''}\n              />\n            </div>\n            <div class={ styles.cboxContainer }>\n            <LabeledInput\n                label=\"Circular to\"\n                name=\"onScrollToRow\"\n                placeholder=\"Index...\"\n                onChange={this._onScrollToRowChange}\n                value={enteredIdx || ''}\n              />\n            </div>\n            <div class={ styles.cboxContainer } style={{width: \"230px\"}}>\n            <div class={ styles.cboxLabel }>Event Type</div>\n                <ul class={ styles.ksCboxtags }>\n                <li><input\n                  aria-label=\"Gamma-ray bursts\"\n                  checked={grb}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"grb\"\n                  onChange={event =>\n                    this._showSelectedType(event.target.checked, 'grb')\n                  }\n                /><label for=\"grb\">\n                GRB\n                </label></li>\n                <li><input\n                  aria-label=\"Gravitational waves\"\n                  checked={gw}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"gw\"\n                  onChange={event =>\n                    this._showSelectedType(event.target.checked, 'gw')\n                  }\n                /><label for=\"gw\">\n                GW\n                </label></li>\n                <li><input\n                  aria-label=\"Neutrinos\"\n                  checked={nu}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"nu\"\n                  onChange={event =>\n                    this._showSelectedType(event.target.checked, 'nu')\n                  }\n                /><label for=\"nu\">\n                &nu;\n                </label></li>\n                <li><input\n                  aria-label=\"others\"\n                  checked={others}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"others\"\n                  onChange={event =>\n                    this._showSelectedType(event.target.checked, 'other')\n                  }\n                /><label for=\"others\">\n                others\n                </label></li>\n                </ul>\n            </div>\n\n            <div class={ styles.cboxContainer } style={{width: \"320px\"}}>\n            <div class={ styles.cboxLabel }>Wavelength</div>\n                <ul class={ styles.ksCboxMW }>\n                <li><input\n                  aria-label=\"Radio\"\n                  checked={radio}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"radio\"\n                  onChange={event =>\n                    this._showSelectedEM(event.target.checked, 'radio')\n                  }\n                /><label for=\"radio\">\n                Radio\n                </label></li>\n                <li><input\n                  aria-label=\"Optical\"\n                  checked={optical}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"optical\"\n                  onChange={event =>\n                    this._showSelectedEM(event.target.checked, 'optical')\n                  }\n                /><label for=\"optical\">\n                optical\n                </label></li>\n                <li><input\n                  aria-label=\"X-ray\"\n                  checked={xRay}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"xRay\"\n                  onChange={event =>\n                    this._showSelectedEM(event.target.checked, 'xRay')\n                  }\n                /><label for=\"xRay\">\n                X-ray\n                </label></li>\n                <li><input\n                  aria-label=\"&gamma;-ray\"\n                  checked={gammaRay}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"gammaRay\"\n                  onChange={event =>\n                    this._showSelectedEM(event.target.checked, 'gammaRay')\n                  }\n                /><label for=\"gammaRay\">\n                &gamma;-ray\n                </label></li>\n                <li><input\n                  aria-label=\"High-energy\"\n                  checked={HE}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"HE\"\n                  onChange={event =>\n                    this._showSelectedEM(event.target.checked, 'HE')\n                  }\n                /><label for=\"HE\">\n                HE\n                </label></li>\n                <li><input\n                  aria-label=\"Very-high-energy\"\n                  checked={VHE}\n                  className= \"checkbox\"\n                  type=\"checkbox\"\n                  id=\"VHE\"\n                  onChange={event =>\n                    this._showSelectedEM(event.target.checked, 'VHE')\n                  }\n                /><label for=\"VHE\">\n                VHE\n                </label></li>\n                </ul>\n            </div>\n            </InputRow>\n\n            \n            <div style={{paddingTop:\"10pt\", float:\"left\", width:\"200pt\"}}>\n            <div style={{color: \"#454545\", fontSize: \".75em\", fontWeight: 100, width:\"70pt\", float:\"left\"}}>\n            Event table </div>\n            <div style={{float:\"left\"}}><ToggleButton\n                value={ this.state.showEvt || false }\n                thumbStyle={{borderRadius: 2 }}\n                trackStyle={{borderRadius: 2 }}\n                colors={{\n                    activeThumb: {\n                      base: 'rgb(250,250,250)',\n                    },\n                    inactiveThumb: {\n                      base: 'rgb(250,250,250)',\n                    },\n                    active: {\n                      base: '#7986cb',\n                      hover: '#9fa8da',\n                    },\n                    inactive: {\n                      base: 'rgb(65,66,68)',\n                      hover: 'rgb(95,96,98)',\n                    }\n                  }}\n                onToggle={(value) => {\n                this.setState({\n                  showEvt: !value,\n                })\n                }} /></div>\n            </div>\n            {this.state.showEvt && (\n            <AutoSizer disableHeight>\n                {({width}) => (\n                <Table\n                width={width}\n                height={(this.state.showCir)? 300:600}\n                headerHeight={30}\n                rowHeight={30}\n                rowCount={events_selected.length}\n                rowGetter={rowGetter_event}\n                sort={this._sortEvt}\n                sortBy={sortByEvt}\n                sortDirection={sortDirectionEvt}\n                rowRenderer={this.rowRendererEvt}\n                onRowClick={this._onRowClickEvt}\n                onHeaderClick={this._onHeaderClick}\n                rowClassName = {this._rowClassName}\n                >\n\n\n                <Column \n                    disableSort\n                    label=\"Type\" \n                    dataKey=\"eventType\" \n                    width={60}\n                />\n\n                <Column \n                    disableSort={false}\n                    label=\"Event\" \n                    dataKey=\"event\" \n                    width={130}\n                />\n\n                <Column \n                    disableSort\n                    cellRenderer={this.cellRenderer_cir}\n                    label=\"Circulars\" \n                    dataKey=\"circulars\" \n                    width={110}\n                    style={{textIndent:\"20pt\"}}\n                />\n\n                <Column\n                    disableSort\n                    label=\"Trigger\"\n                    dataKey=\"trigger\"\n                    width={290} \n                />\n                \n                <Column\n                    disableSort\n                    label=<div>RA <CachedIcon style={{fontSize: \"10px\", cursor: \"pointer\"}} /></div>\n                    dataKey={(locType)?\"ra\":\"raHMS\"}\n                    width={240} \n                />\n\n                <Column\n                    disableSort\n                    label=<div>DEC <CachedIcon style={{fontSize: \"10px\", cursor: \"pointer\"}} /></div>\n                    dataKey={(locType)?\"dec\":\"decDMS\"}\n                    width={240} \n                />\n\n                <Column\n                    disableSort\n                    label=\"Error\"\n                    dataKey=\"error\"\n                    width={180}\n                />\n\n                </Table>\n                )}\n             </AutoSizer>)}\n\n            <div style={{paddingTop:\"10pt\", float:\"left\", width:\"200pt\"}}>\n            <div style={{color: \"#454545\", fontSize: \".75em\", fontWeight: 100, width:\"70pt\", float:\"left\"}}>\n            Circular table </div><div style={{float:\"left\"}}><ToggleButton\n                value={ this.state.showCir || false }\n                thumbStyle={{borderRadius: 2 }}\n                trackStyle={{borderRadius: 2 }}\n                colors={{\n                    activeThumb: {\n                      base: 'rgb(250,250,250)',\n                    },\n                    inactiveThumb: {\n                      base: 'rgb(250,250,250)',\n                    },\n                    active: {\n                      base: '#7986cb',\n                      hover: '#9fa8da',\n                    },\n                    inactive: {\n                      base: 'rgb(65,66,68)',\n                      hover: 'rgb(95,96,98)',\n                    }\n                  }}\n                onToggle={(value) => {\n                this.setState({\n                  showCir: !value,\n                })\n                }} /></div>\n            </div>\n            {this.state.showCir && (\n            <AutoSizer disableHeight>\n                {({width}) => (\n                <Table\n                width={width}\n                height={(this.state.showEvt)? 300:600}\n                headerHeight={30}\n                rowHeight={30}\n                rowCount={circulars_selected.length}\n                rowGetter={rowGetter_circular}\n                sort={this._sort}\n                sortBy={sortBy}\n                sortDirection={sortDirection}\n                rowRenderer={this.rowRenderer}\n                onRowClick={this._onRowClick}\n                scrollToIndex={scrollToIndex}\n                rowClassName = {this._rowClassName}\n                >\n\n                <Column\n                    disableSort={false}\n                    headerRenderer={this._headerRenderer}\n                    label=\"#\"\n                    dataKey=\"id\"\n                    width={50} \n                />\n\n                <Column \n                    disableSort\n                    label=\"Subject\" \n                    dataKey=\"subject\" \n                    width={750}\n                />\n\n                <Column \n                    disableSort\n                    cellRenderer={this.cellRenderer_evt}\n                    label=\"Event\" \n                    dataKey=\"evtid\" \n                    width={150}\n                />\n\n                <Column\n                    disableSort\n                    cellRenderer={this.cellRenderer_obs}\n                    label=\"Observatory\"\n                    dataKey=\"telescope\"\n                    width={150} \n                />\n                \n                <Column\n                    disableSort\n                    cellRenderer={this.cellRenderer_mm}\n                    label=\"MW/MM\"\n                    dataKey=\"messenger\"\n                    width={100} \n                />\n\n                <Column \n                    disableSort\n                    cellRenderer={this.cellRenderer_mail}\n                    label=\" \"\n                    dataKey=\"sender\"\n                    width={50}\n                />\n\n                </Table>\n                )}\n            </AutoSizer>)}\n            </div>\n            )\n        }\n    };\n\n    _onScrollToRowChange(event) {\n\n        const { circulars_selected, ordered } = this.state;\n        const rowCount =  circulars_selected.length\n        const enteredIdx = parseInt(event.target.value, 10)\n        var Index = undefined\n\n        const selectedCircular = circulars_selected.filter((element) => {return element.id === enteredIdx})[0]\n        \n        if(typeof selectedCircular !== \"undefined\")\n            Index = selectedCircular.id\n        \n        let scrollToIndex = Math.max(\n          0,\n          (rowCount - Index - 1 || 0),\n        );\n\n        if (!ordered)\n            scrollToIndex = rowCount-scrollToIndex-1\n\n        if (isNaN(scrollToIndex)) {\n          scrollToIndex = undefined;\n        }\n\n        this.setState({scrollToIndex});\n        this.setState({enteredIdx});\n    }\n\n    _showSelectedType (value, type) {\n\n        const {grb, gw, nu, others, circulars, events} = this.state\n        var filtered\n\n        if (type==='grb'){\n            this.setState({grb: value})\n            filtered = [value, gw, nu, others]\n        } else if (type==='gw'){\n            this.setState({gw: value})\n            filtered = [grb, value, nu, others]\n        } else if (type==='nu'){\n            this.setState({nu: value})\n            filtered = [grb, gw, value, others]\n        } else if (type==='other'){\n            this.setState({others: value})\n            filtered = [grb, gw, nu, value]\n        }\n\n        this.setState({events_selected: events.filter((element) => {\n            return (\n            ((element.eventType === 'GRB') && filtered[0])||\n            ((element.eventType === 'GW') && filtered[1])||\n            ((element.eventType === '\\u03BD') && filtered[2])||\n            ((element.eventType === 'others') && filtered[3])\n            )\n        })\n        })\n\n        this.setState({ circulars_selected: circulars.filter(function(circular)\n            {\n                const event = events.filter((element) => { return (element.id === circular.evtid)})[0]\n                var tempCir\n                if (event !== undefined){\n                    if (((event.eventType === 'GRB') && filtered[0])||\n                        ((event.eventType === 'GW') && filtered[1])||\n                        ((event.eventType === '\\u03BD') && filtered[2])){\n                        tempCir = circular\n                    }\n                } else if (filtered[3]) {\n                    tempCir = circular\n                } else {\n                    tempCir = undefined\n                }\n                return tempCir\n            }\n        )})\n    }\n\n    _showSelectedEM (value, type) {\n\n        const {circulars, radio, optical, xRay, gammaRay, HE, VHE} = this.state\n        var filtered\n\n        if (type==='radio'){\n            filtered = [value, optical, xRay, gammaRay, HE, VHE]\n        } else if (type==='optical'){\n            filtered = [radio, value, xRay, gammaRay, HE, VHE]\n        } else if (type==='xRay'){\n            filtered = [radio, optical, value, gammaRay, HE, VHE]\n        } else if (type==='gammaRay'){\n            filtered = [radio, optical, xRay, value, HE, VHE]\n        } else if (type==='HE'){\n            filtered = [radio, optical, xRay, gammaRay, value, VHE]\n        } else if (type==='VHE'){\n            filtered = [radio, optical, xRay, gammaRay, HE, value]\n        }\n        \n\n        this.setState({circulars_selected: circulars.filter((element) => {\n            return (\n            ((element.wavelength === 'radio') && filtered[0])||\n            ((element.wavelength === 'optical') && filtered[1])||\n            ((element.wavelength === 'X-ray') && filtered[2])||\n            ((element.wavelength === '\\u03B3-ray') && filtered[3])||\n            ((element.wavelength === 'HE') && filtered[4])||\n            ((element.wavelength === 'VHE') && filtered[5])\n            )\n        })\n        })\n\n        this.setState({radio:false, optical:false, xRay:false, gammaRay:false, HE:false, VHE:false})\n\n    }\n\n    _rowClassName({index}) {\n        if (index < 0) {\n            return styles.headerRow;\n        } else {\n            return index % 2 === 0 ? styles.evenRow : styles.oddRow;\n        }\n    }\n\n    _searchEvent(event) {\n        const {circulars, events} = this.state\n        const enteredEvent = event.target.value\n        this.setState({circulars_selected: circulars.filter((element) => {\n            return (element.subject.indexOf(enteredEvent) !== -1)\n        })\n        })\n        this.setState({events_selected: events.filter((element) => {\n            return (element.event.indexOf(enteredEvent) !== -1)\n        })\n        })\n\n        this.setState({enteredEvent});\n    }\n\n    _onRowClick ({index, rowData}) {\n        \n        const { selectedIdx } = this.state\n        this.getBody({rowData})\n\n        if ( selectedIdx === index ) {\n            this.setState({selectedIdx: -1})\n        } else {\n            this.setState({selectedIdx: index}) \n            this.setState({cirClose: true})\n        }\n    }\n\n    _onRowClickEvt({index, rowData}) {\n\n        const { selectedEvtIdx, circulars, events, grb, gw, nu, others } = this.state\n        const trueIdx = rowData.id\n\n        if ( selectedEvtIdx === index ) {\n            this.setState({selectedEvtIdx: -1})\n            \n            this.setState({events_selected: events.filter((element) => {\n            return (\n            ((element.eventType === 'GRB') && grb)||\n            ((element.eventType === 'GW') && gw)||\n            ((element.eventType === '\\u03BD') && nu)||\n            ((element.eventType === 'others') && others)\n            )})})\n            \n            this.setState({ circulars_selected: circulars.filter(function(circular) \n                {\n                    const event = events.filter((element) => { return (element.id === circular.evtid)})[0]\n                    var tempCir\n                    if (event !== undefined){\n                        if (((event.eventType === 'GRB') && grb)||\n                            ((event.eventType === 'GW') && gw)||\n                            ((event.eventType === '\\u03BD') && nu)){\n                            tempCir = circular\n                        }\n                    } else if (others) {\n                        tempCir = circular\n                    } else {\n                        tempCir = undefined\n                    }\n                    return tempCir\n                }\n            )})\n\n        } else {\n            \n            this.setState({selectedEvtIdx: index}) \n            this.setState({circulars_selected: circulars.filter((element) => {return (element.evtid === trueIdx)})\n            })\n        }\n        this.setState({enteredEvent: undefined})\n        this.setState({radio:false, optical:false, xRay:false, gammaRay:false, HE:false, VHE:false})\n    }\n\n    _onHeaderClick ({dataKey}) {\n        \n        if (dataKey === \"ra\" || dataKey === \"dec\" ){\n            this.setState({locType: false})\n        } else if (dataKey === \"raHMS\" || dataKey === \"decDMS\" ){\n            this.setState({locType: true})\n        }\n    }\n\n    _onCloseClick () {\n        this.setState({cirClose:false})\n        this.setState({selectedIdx:-1})\n        this.setState({body:[]})\n    }\n\n    _updatingButtons() {\n        const { circulars_selected, radio, optical, xRay, gammaRay, HE, VHE } = this.state\n\n        if (circulars_selected.length !== 0){\n            var i;\n            const len = circulars_selected.length\n            for (i = 0; i < len; i++) {\n                if (circulars_selected[i]['wavelength'] === 'radio' && !(radio)) {\n                    this.setState({radio: true})\n                } else if (circulars_selected[i]['wavelength'] === 'optical' && !(optical)){\n                    this.setState({optical: true})\n                } else if (circulars_selected[i]['wavelength'] === 'X-ray' && !(xRay)){\n                    this.setState({xRay: true})\n                } else if (circulars_selected[i]['wavelength'] === '\\u03B3-ray' && !(gammaRay)){\n                    this.setState({gammaRay: true})\n                } else if (circulars_selected[i]['wavelength'] === 'HE' && !(HE)){\n                    this.setState({HE: true})\n                } else if (circulars_selected[i]['wavelength'] === 'VHE' && !(VHE)){\n                    this.setState({VHE: true})\n                }\n            }\n        }\n    }\n}\n\nexport default GCN_TABLE;\n","import React, { Component } from 'react';\nimport {Table, Column, AutoSizer, defaultTableRowRenderer, SortDirection, SortIndicator} from 'react-virtualized';\nimport 'react-virtualized/styles.css';\nimport { LabeledInput, InputRow } from './LabeledInput'\nimport styles from './TABLE.module.css'\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@material-ui/core';\nimport { CoffeeLoading } from 'react-loadingg';\n\nclass EVENT_TABLE extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            db: [],\n            db_selected: [],\n            init: false,\n            ordered: true,\n            editDialog: false,\n            sortBy: \"id\",\n            sortDirection: SortDirection.DESC,\n            selectedIdx: -1,\n            searchText: undefined,\n            enteredIdx: undefined, \n            scrollToIndex:undefined, \n            type: 1,\n\n        }\n\n        this._rowClassName = this._rowClassName.bind(this)\n        this._searchFor = this._searchFor.bind(this)\n        this._sortData = this._sortData.bind(this)\n        this._headerRenderer = this._headerRenderer.bind(this)\n        this._onRowClick = this._onRowClick.bind(this)\n        this._onRemoveClick = this._onRemoveClick.bind(this)\n        this._onCloseClick = this._onCloseClick.bind(this)\n        this._showSelectedType = this._showSelectedType.bind(this)\n        this._onScrollToRowChange = this._onScrollToRowChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.getDatabase();\n    }\n\n    getDatabase = () => {\n    \n        fetch('event')\n        .then(response => response.json())\n        .then(response => this.setState({db: response.data.reverse()}))\n        .catch(err => console.error(err))\n    }\n\n    _initDatabase() {\n        const { db } = this.state\n        if (db.length > 0) {\n            this.setState({init:true, db_selected: db.filter((element) => {return (element.eventType === 'GRB')})})\n        }\n    }\n\n    _sortData({ sortBy, sortDirection }) {\n        let { db, ordered, db_selected } = this.state\n        ordered = !ordered\n        db= db.reverse()\n        db_selected= db_selected.reverse()\n        this.setState({ sortBy, sortDirection, ordered, db, db_selected});\n    }\n\n    _rowClassName({index}) {\n        if (index < 0) {\n            return styles.headerRow;\n        } else {\n            return index % 2 === 0 ? styles.evenRow : styles.oddRow;\n        }\n    }\n\n    _onScrollToRowChange(e) {\n\n        const { db_selected, ordered } = this.state;\n        const rowCount =  db_selected.length\n        const enteredIdx = parseInt(e.target.value, 10)\n        var Index = undefined\n\n        const scrollTo = db_selected.filter((element) => {return element.id === enteredIdx})[0]\n        \n        if(typeof scrollTo !== \"undefined\")\n            Index = scrollTo.id\n        \n        let scrollToIndex = Math.max(\n          0,\n          (rowCount - Index - 1 || 0),\n        );\n\n        if (!ordered)\n            scrollToIndex = rowCount-scrollToIndex-1\n\n        if (isNaN(scrollToIndex)) {\n          scrollToIndex = undefined;\n        }\n\n        this.setState({scrollToIndex});\n        this.setState({enteredIdx});\n    }\n\n    _searchFor(e) {\n        const { db } = this.state\n        const searchText = e.target.value\n\n        this.setState({db_selected: db.filter((element) => {\n            return (element.event.indexOf(searchText) !== -1)\n        })\n        })\n\n        this.setState({searchText});\n    }\n\n    _showSelectedType (type) {\n\n        const { db } = this.state\n\n        this.setState({type})\n\n\n        this.setState({db_selected: db.filter((element) => {\n            if (type === 1){\n                return (element.eventType === 'GRB') \n            } else if (type === 2){\n                return (element.eventType === 'GW')\n            } else if (type === 3){\n                return (element.eventType === '\\u03BD')\n            } else {\n                return (element.eventType === 'others')\n            }\n        })\n        })\n    }\n\n    _headerRenderer({ label, dataKey, sortBy, sortDirection }) {\n        return (\n            <div>\n            { label }\n            { sortBy === dataKey && <SortIndicator sortDirection={sortDirection} />}\n            </div>\n        );\n    }\n\n    _onRowClick ({rowData, index}) {\n        const { selectedIdx } = this.state\n        if ( selectedIdx === index ) {\n            this.setState({selectedIdx: -1})\n        } else {\n            this.setState({selectedIdx: index}) \n            this.setState({editDialog: true})\n        }\n    }\n\n    _onRemoveClick (e) {\n        e.preventDefault()\n        var { db, db_selected } = this.state\n        const id=e.target.getAttribute(\"id\")\n        \n        const removed = db.filter((element) => {return parseInt(element.id, 10) === parseInt(id, 10)})[0]\n\n        db.splice(db.indexOf(removed), 1)    \n        db_selected.splice(db_selected.indexOf(removed), 1)    \n\n        const removed_db = {id: id, mode:-1}\n        fetch('event/'+id, \n            {\n                method: 'POST', \n                body: JSON.stringify(removed_db),\n                headers: { 'content-type': 'application/json' }\n            })\n            .catch(err => console.log(err));\n\n        this.setState({db, db_selected})\n        this.setState({editDialog: false})\n        this.setState({selectedIdx:-1})\n    }\n\n    _onCloseClick () {\n        this.setState({editDialog:false})\n        this.setState({selectedIdx:-1})\n    }\n\n    rowRenderer = prevProps => {\n        const { index, style, key, rowData, className } = prevProps\n        const { selectedIdx } = this.state\n        \n        if (index === selectedIdx) {\n            return (\n            <div\n            style={{ ...style, display: \"flex\", flexDirection: \"column\" }}\n            key={key}\n            className={className}\n            >\n            {defaultTableRowRenderer({\n            ...prevProps,\n            style: {width:style.width, height:style.height, color:'white', fontWeight: \"bold\", backgroundColor: '#5c6bc0'}\n            })}\n            <Dialog\n            open={ this.state.editDialog }\n            maxWidth={\"md\"}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle><div style={{fontSize:\"0.9em\"}}>Event ID: {rowData.id}</div></DialogTitle>\n                <DialogContent>\n                <TextField\n                    margin=\"dense\"\n                    id=\"type\"\n                    label=\"Event Type\"\n                    type=\"text\"\n                    fullWidth\n                    value={ rowData.eventType }\n                    name=\"type\"\n                    style={{paddingBottom:\"5pt\"}}\n                  />\n                <TextField\n                    margin=\"dense\"\n                    id=\"evt\"\n                    label=\"Event\"\n                    type=\"text\"\n                    fullWidth\n                    value={ rowData.event }\n                    name=\"evt\"\n                    style={{paddingBottom:\"5pt\"}}\n                />\n                {(rowData.trigger !== null)&&\n                    <TextField\n                        margin=\"dense\"\n                        id=\"trig\"\n                        label=\"Trigger\"\n                        type=\"text\"\n                        fullWidth\n                        value={ rowData.trigger }\n                        name=\"trig\"\n                        style={{paddingBottom:\"5pt\"}}\n                    />  \n                }\n                \n                {(rowData.ra !== null) &&\n                    <div>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"ra\"\n                        label=\"RA\"\n                        type=\"text\"\n                        fullWidth\n                        value={rowData.ra + \" (\"+ rowData.raHMS+\")\"}\n                        name=\"ra\"\n                        style={{paddingBottom:\"5pt\"}}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"dec\"\n                        label=\"DEC\"\n                        type=\"text\"\n                        fullWidth\n                        value={rowData.dec + \" (\"+ rowData.decDMS+\")\"}\n                        name=\"dec\"\n                        style={{paddingBottom:\"5pt\"}}\n                    />\n                    </div>\n                }\n                {(rowData.error !== null) &&\n                    <TextField\n                        margin=\"dense\"\n                        id=\"err\"\n                        label=\"Error\"\n                        type=\"text\"\n                        fullWidth\n                        value={rowData.error}\n                        name=\"err\"\n                        style={{paddingBottom:\"5pt\"}}\n                    />\n                }\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={this._onRemoveClick} color=\"primary\">\n                <div id={rowData.id}>Remove</div>\n                </Button>\n                <Button onClick={this._onCloseClick} color=\"primary\" autoFocus>\n                Close\n                </Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n        } else{\n            return defaultTableRowRenderer({...prevProps, style:{...style}});    \n        }\n    };\n\n\n    render() {\n\n        const { db, db_selected, init, sortBy, sortDirection, searchText, scrollToIndex, enteredIdx, type } = this.state\n\n        if (init===false){\n            this._initDatabase()\n        } \n\n        const _getDatum = index => db_selected[index % db_selected.length];\n        \n        const rowGetter = ({ index }) => _getDatum(index);\n\n        \n        if (db.length === 0){\n            return <CoffeeLoading />\n        } else {\n            return (\n            <div>\n                <InputRow>\n                <div class={ styles.cboxContainer }>\n                <LabeledInput\n                    label=\"Index to\"\n                    name=\"onScrollToRow\"\n                    placeholder=\"Index...\"\n                    onChange={this._onScrollToRowChange}\n                    value={enteredIdx || ''}\n                  />\n                </div>\n                <div class={ styles.cboxContainer }>\n                <LabeledInput\n                    label=\"Search for\"\n                    name=\"searchRow\"\n                    placeholder=\"e.g., Swift, GRB, ...\"\n                    onChange={this._searchFor}\n                    value={searchText || ''}\n                  />\n                </div>\n                \n\n                <div class={ styles.cboxContainer } style={{width: \"230px\"}}>\n                    <div class={ styles.cboxLabel }>Event Type</div>\n                    <ul class={ styles.ksCboxtags }>\n                    <li><input\n                      aria-label=\"Gamma-ray bursts\"\n                      checked={(type===1)? true: false}\n                      className= \"checkbox\"\n                      type=\"checkbox\"\n                      id=\"grb\"\n                      onChange={event =>\n                        this._showSelectedType(1)\n                      }\n                    /><label for=\"grb\">\n                    GRB\n                    </label></li>\n                    <li><input\n                      aria-label=\"Gravitational waves\"\n                      checked={(type===2)? true: false}\n                      className= \"checkbox\"\n                      type=\"checkbox\"\n                      id=\"gw\"\n                      onChange={event =>\n                        this._showSelectedType(2)\n                      }\n                    /><label for=\"gw\">\n                    GW\n                    </label></li>\n                    <li><input\n                      aria-label=\"Neutrinos\"\n                      checked={(type===3)? true: false}\n                      className= \"checkbox\"\n                      type=\"checkbox\"\n                      id=\"nu\"\n                      onChange={event =>\n                        this._showSelectedType(3)\n                      }\n                    /><label for=\"nu\">\n                    &nu;\n                    </label></li>\n                    <li><input\n                      aria-label=\"others\"\n                      checked={(type===4)? true: false}\n                      className= \"checkbox\"\n                      type=\"checkbox\"\n                      id=\"others\"\n                      onChange={event =>\n                        this._showSelectedType(4)\n                      }\n                    /><label for=\"others\">\n                    others\n                    </label></li>\n                    </ul>\n                </div>\n                </InputRow>\n\n                <AutoSizer disableHeight>\n                {({width}) => (\n                <Table\n                width={width}\n                height={600}\n                headerHeight={30}\n                rowHeight={30}\n                rowCount={db_selected.length}\n                rowGetter={rowGetter}\n                sort={this._sortData}\n                sortBy={sortBy}\n                rowRenderer={this.rowRenderer}\n                onRowClick={this._onRowClick}\n                sortDirection={sortDirection}\n                rowClassName={this._rowClassName}\n                scrollToIndex={scrollToIndex}\n                >\n\n\n                <Column\n                    disableSort={false}\n                    headerRenderer={this._headerRender}\n                    label=\"#\"\n                    dataKey=\"id\"\n                    width={50} \n                />\n\n                <Column \n                    disableSort\n                    label=\"Type\" \n                    dataKey=\"eventType\" \n                    width={60}\n                />\n\n                <Column \n                    disableSort\n                    label=\"Event\" \n                    dataKey=\"event\" \n                    width={150}\n                />\n\n                <Column\n                    disableSort\n                    label=\"Trigger\"\n                    dataKey=\"trigger\"\n                    width={350} \n                />\n                \n                <Column\n                    disableSort\n                    label=\"RA\"\n                    dataKey=\"ra\"\n                    width={130} \n                />\n\n                <Column\n                    disableSort\n                    label=\"RA_HMS\"\n                    dataKey=\"raHMS\"\n                    width={150} \n                />\n\n                <Column\n                    disableSort\n                    label=\"DEC\"\n                    dataKey=\"dec\"\n                    width={130} \n                />\n\n                <Column\n                    disableSort\n                    label=\"DEC_DMS\"\n                    dataKey=\"decDMS\"\n                    width={150} \n                />\n\n                <Column\n                    disableSort\n                    label=\"Error\"\n                    dataKey=\"error\"\n                    width={150}\n                />\n\n                </Table>\n                )}\n                </AutoSizer>\n            </div>\n        )}\n    }\n}\n\nexport default EVENT_TABLE;\n","/** @flow */\n\nimport React, { Component } from 'react';\nimport {Table, Column, AutoSizer, defaultTableRowRenderer, SortDirection, SortIndicator} from 'react-virtualized';\nimport 'react-virtualized/styles.css';\nimport { LabeledInput, InputRow } from './LabeledInput'\nimport styles from './TABLE.module.css'\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, DialogContentText, InputLabel, Select } from '@material-ui/core';\nimport { CoffeeLoading } from 'react-loadingg';\n\nclass CIRC_TABLE extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            db: [],\n            db_selected: [],\n            events: [],\n            obs: [],\n            body: [],\n            init: false,\n            ordered: true,\n            editDialog: false,\n            sortBy: \"id\",\n            sortDirection: SortDirection.DESC,\n            selectedIdx: -1,\n            searchText: undefined,\n            enteredIdx: undefined, \n            scrollToIndex:undefined, \n            obsid: undefined,\n            evtid: undefined,\n\n        }\n\n        this._rowClassName = this._rowClassName.bind(this)\n        this._searchFor = this._searchFor.bind(this)\n        this._sortData = this._sortData.bind(this)\n        this._onRowClick = this._onRowClick.bind(this)\n        this._onModifyClick = this._onModifyClick.bind(this)\n        this._onCloseClick = this._onCloseClick.bind(this)\n        this._onValChange = this._onValChange.bind(this)\n        this._headerRenderer = this._headerRenderer.bind(this)\n        this._onScrollToRowChange = this._onScrollToRowChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.getDatabase();\n    }\n\n    getDatabase = () => {\n    \n        fetch('circular')\n        .then(response => response.json())\n        .then(response => this.setState({db: response.data.reverse()}))\n        .catch(err => console.error(err))\n\n        fetch('event')\n        .then(response => response.json())\n        .then(response => this.setState({events: response.data}))\n        .catch(err => console.error(err))\n\n        fetch('observatory')\n        .then(response => response.json())\n        .then(response => this.setState({obs: response.data}))\n        .catch(err => console.error(err))\n    }\n\n    getBody({rowData}) {\n        fetch('cbody/'+rowData.id)\n        .then(response => response.json())\n        .then(response => this.setState({body: response.data}))\n        .catch(err => console.error(err))\n    }\n\n    _copyDatabase() {\n        const { db } = this.state\n        if (db.length > 0) {\n            this.setState({init:true, db_selected: db})    \n        }\n        \n    }\n\n    _sortData({ sortBy, sortDirection }) {\n        let { db, ordered, db_selected } = this.state\n        ordered = !ordered\n        db= db.reverse()\n        db_selected= db_selected.reverse()\n        this.setState({ sortBy, sortDirection, ordered, db, db_selected});\n    }\n    \n    _onRowClick ({rowData, index}) {\n        const { selectedIdx } = this.state\n        this.getBody({rowData})\n\n        if ( selectedIdx === index ) {\n            this.setState({selectedIdx: -1})\n        } else {\n            this.setState({selectedIdx: index}) \n            this.setState({editDialog: true})\n            this.setState({evtid: rowData.evtid, obsid: rowData.obsid})\n            //fullName: rowData.full_name,\n            //mw: rowData.wavelength, mm: rowData.messenger\n        }\n    }\n\n    _onModifyClick (e) {\n        e.preventDefault()\n        const { evtid, obsid, obs } = this.state\n        var { db_selected } = this.state\n        const id=e.target.getAttribute(\"id\")\n        const updated_db = {id: id, evtid: evtid, obsid: obsid}\n        \n        fetch('circular/'+id, \n            {\n                method: 'POST', \n                body: JSON.stringify(updated_db),\n                headers: { 'content-type': 'application/json' }\n            })\n            .catch(err => console.log(err));\n\n        db_selected.forEach(function (element) {\n            if (element.id === parseInt(id, 10)) {\n                const updatedObs = obs.filter((element) => {return element.id === obsid})[0]\n                element.evtid = evtid\n                element.obsid = obsid\n                element.telescope = updatedObs.telescope\n                element.detector = updatedObs.detector\n                element.mwid = updatedObs.mwid\n                element.wavelength = updatedObs.wavelength\n                element.messenger = updatedObs.messenger\n            }\n        })\n        \n        this.setState({db_selected})\n        this.setState({editDialog:false})\n        this.setState({selectedIdx:-1})\n        this.setState({evtid: undefined, obsid: undefined})\n    }\n\n    _onCloseClick () {\n        this.setState({editDialog:false})\n        this.setState({selectedIdx:-1})\n        this.setState({evtid: undefined, obsid: undefined})\n        this.setState({body: []})\n    }\n\n    _onValChange (e) {\n        const name = e.target.name\n        const value = parseInt(e.target.value)\n        if (name===\"evt\"){\n            this.setState({evtid: value})\n        } else if (name===\"obs\"){\n            this.setState({obsid: value})\n        }\n    }\n\n    rowRenderer = prevProps => {\n        const { index, style, key, rowData, className } = prevProps\n        const { selectedIdx, events, obs, obsid, evtid, body } = this.state\n\n        if (index === selectedIdx && body.length !== 0) {\n            return (\n            <div\n            style={{ ...style, display: \"flex\", flexDirection: \"column\" }}\n            key={key}\n            className={className}\n            >\n            {defaultTableRowRenderer({\n            ...prevProps,\n            style: { width: style.width, height: style.height, color:'white', fontWeight: \"bold\", backgroundColor: '#5c6bc0'}\n            })}\n            <Dialog\n            open={ this.state.editDialog }\n            maxWidth={\"md\"}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\"><div style={{fontSize:\"0.9em\"}}>Circular ID: {rowData.id}</div></DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                <pre style={{overflow: \"auto\", whiteSpace: \"pre-wrap\", wordWrap: \"break-word\"}}>\n                {body[0].body}</pre><br/><br/>\n                </DialogContentText>\n\n                <InputLabel style={{fontSize: \"0.75em\"}}>Event</InputLabel>\n                <Select\n                    native\n                    value={ evtid }\n                    name=\"evt\"\n                    label=\"Event\"\n                    onChange={this._onValChange}\n                >\n                    <option key={999999} value={999999}></option>\n                    {events.map((element) => (\n                        <option key={element.id} value={element.id}>{element.event}</option>\n                        ))}\n                </Select>\n                <div style={{paddingBottom:\"10pt\"}}></div>\n                <InputLabel style={{fontSize: \"0.75em\"}}>Observatory</InputLabel>\n                <Select\n                    native\n                    value={ obsid }\n                    name=\"obs\"\n                    label=\"Observatory\"\n                    onChange={this._onValChange}\n                >\n                    <option key={9999} value={9999}></option>\n                    {obs.map((obs) => (\n                        (obs.detector===null)?\n                        <option key={obs.id} value={obs.id}>{obs.telescope}</option>\n                        :<option key={obs.id} value={obs.id}>{obs.telescope+\"/\"+obs.detector}</option>\n                        ))}\n                    \n                    <option key={1001} value={1001}>radio</option>\n                    <option key={1002} value={1002}>optical</option>\n                    <option key={1003} value={1003}>X-ray</option>\n                    <option key={1004} value={1004}>γ-ray</option>\n                    <option key={1005} value={1005}>HE</option>\n                    <option key={1006} value={1006}>VHE</option>\n\n                </Select>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={this._onModifyClick} color=\"primary\">\n                <div id={rowData.id}>Modify</div>\n                </Button>\n                <Button onClick={this._onCloseClick} color=\"primary\" autoFocus>\n                Close\n                </Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n        } else{\n            return defaultTableRowRenderer({...prevProps, style:{...style}});    \n        }\n    };\n\n    _rowClassName({index}) {\n        if (index < 0) {\n            return styles.headerRow;\n        } else {\n            return index % 2 === 0 ? styles.evenRow : styles.oddRow;\n        }\n    }\n\n    _onScrollToRowChange(e) {\n\n        const { db_selected, ordered } = this.state;\n        const rowCount =  db_selected.length\n        const enteredIdx = parseInt(e.target.value, 10)\n        var Index = undefined\n\n        const scrollTo = db_selected.filter((element) => {return element.id === enteredIdx})[0]\n        \n        if(typeof scrollTo !== \"undefined\")\n            Index = scrollTo.id\n        \n        let scrollToIndex = Math.max(\n          0,\n          (rowCount - Index - 1 || 0),\n        );\n\n        if (!ordered)\n            scrollToIndex = rowCount-scrollToIndex-1\n\n        if (isNaN(scrollToIndex)) {\n          scrollToIndex = undefined;\n        }\n\n        this.setState({scrollToIndex});\n        this.setState({enteredIdx});\n    }\n\n    _searchFor(e) {\n        const { db } = this.state\n        const searchText = e.target.value\n\n        this.setState({db_selected: db.filter((element) => {\n            return (element.subject.indexOf(searchText) !== -1)\n        })\n        })\n\n        this.setState({searchText});\n    }\n\n\n    _headerRenderer({ label, dataKey, sortBy, sortDirection }) {\n        return (\n            <div>\n            { label }\n            { sortBy === dataKey && <SortIndicator sortDirection={sortDirection} />}\n            </div>\n        );\n    }\n\n    cellRenderer_evt = ({ rowData, rowIndex }) => {\n        const { events } = this.state\n        if (rowData.evtid!==999999 ) {\n            const evtName = events.filter((element) => {return (element.id === rowData.evtid)})[0]\n            return <div>{evtName.event}</div>\n        } else {\n            return <div></div>\n        }\n    };\n\n    cellRenderer_obs = ({ rowData, rowIndex }) => {\n        if (rowData.detector === null) {\n            return <div>{rowData.telescope}</div>\n        } else {\n            return <div>{rowData.telescope}/{rowData.detector}</div>\n        }\n    };\n\n    cellRenderer_mm = ({ rowData, rowIndex }) => {\n\n        if (rowData.messenger === 'EM') {\n            return <div>{rowData.wavelength}</div>    \n        } else {\n            return <div>{rowData.messenger}</div>\n        }\n    };\n\n\n    render() {\n\n        const { db, db_selected, init, sortBy, sortDirection, searchText, scrollToIndex, enteredIdx } = this.state\n\n        if (init===false){\n            this._copyDatabase()\n        } \n\n        const _getDatum = index => db_selected[index % db_selected.length];\n        \n        const rowGetter = ({ index }) => _getDatum(index);\n        \n        if (db.length === 0){\n            return <CoffeeLoading />\n        } else {\n            return (\n            <div>\n                <InputRow>\n                <div class={ styles.cboxContainer }>\n                <LabeledInput\n                    label=\"Index to\"\n                    name=\"onScrollToRow\"\n                    placeholder=\"Index...\"\n                    onChange={this._onScrollToRowChange}\n                    value={enteredIdx || ''}\n                  />\n                </div>\n                <div class={ styles.cboxContainer }>\n                <LabeledInput\n                    label=\"Search for\"\n                    name=\"searchRow\"\n                    placeholder=\"e.g., Swift, GRB, ...\"\n                    onChange={this._searchFor}\n                    value={searchText || ''}\n                  />\n                </div>\n                </InputRow>\n\n                <AutoSizer disableHeight>\n                {({width}) => (\n                <Table\n                width={width}\n                height={600}\n                headerHeight={30}\n                rowHeight={30}\n                rowCount={db_selected.length}\n                rowGetter={rowGetter}\n                sort={this._sortData}\n                sortBy={sortBy}\n                onRowClick={this._onRowClick}\n                rowRenderer={this.rowRenderer}\n                sortDirection={sortDirection}\n                rowClassName={this._rowClassName}\n                scrollToIndex={scrollToIndex}\n                >\n\n                 <Column\n                    disableSort={false}\n                    headerRenderer={this._headerRenderer}\n                    label=\"#\"\n                    dataKey=\"id\"\n                    width={50} \n                />\n\n                <Column \n                    disableSort\n                    label=\"Subject\" \n                    dataKey=\"subject\" \n                    width={300}\n                />\n\n                <Column \n                    disableSort\n                    cellRenderer={this.cellRenderer_evt}\n                    label=\"Event\" \n                    dataKey=\"evtid\" \n                    width={150}\n                />\n                \n                <Column\n                    disableSort\n                    cellRenderer={this.cellRenderer_obs}\n                    label=\"Observatory\"\n                    dataKey=\"telescope\"\n                    width={150} \n                />\n                \n                <Column\n                    disableSort\n                    cellRenderer={this.cellRenderer_mm}\n                    label=\"MW/MM\"\n                    dataKey=\"messenger\"\n                    width={100} \n                />\n\n\n                <Column \n                    disableSort\n                    label=\"Sender\"\n                    dataKey=\"sender\"\n                    width={100}\n                />\n\n                <Column \n                    disableSort\n                    label=\"Received\"\n                    dataKey=\"received\"\n                    width={150}\n                />\n\n                <Column \n                    disableSort\n                    label=\"Body\"\n                    dataKey=\"body\"\n                    width={50}\n                />\n\n                </Table>\n                )}\n                </AutoSizer>\n            </div>\n        )}\n    }\n}\n\nexport default CIRC_TABLE;\n","import React, { Component } from 'react';\nimport {Table, Column, AutoSizer, defaultTableRowRenderer, SortDirection, SortIndicator} from 'react-virtualized';\nimport 'react-virtualized/styles.css';\nimport { LabeledInput, InputRow } from './LabeledInput'\nimport styles from './TABLE.module.css'\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { CoffeeLoading } from 'react-loadingg';\n\nclass OBS_TABLE extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            db: [],\n            db_selected: [],\n            circulars: [],\n            init: false,\n            ordered: true,\n            editDialog: false,\n            addDialog: false,\n            sortBy: \"id\",\n            sortDirection: SortDirection.DESC,\n            selectedIdx: -1,\n            searchText: undefined,\n            enteredIdx: undefined, \n            scrollToIndex:undefined, \n            tel: undefined,\n            dtr: undefined,\n            mw: undefined,\n            mm: undefined,\n            mwid: undefined,\n            fullName: undefined,\n\n        }\n\n        this._rowClassName = this._rowClassName.bind(this)\n        this._searchFor = this._searchFor.bind(this)\n        this._sortData = this._sortData.bind(this)\n        this._sortList = this._sortList.bind(this)\n        this._headerRenderer = this._headerRenderer.bind(this)\n        this._onScrollToRowChange = this._onScrollToRowChange.bind(this)\n        this._onRowClick = this._onRowClick.bind(this)\n        this._onModifyClick = this._onModifyClick.bind(this)\n        this._onAddClick = this._onAddClick.bind(this)\n        this._onAddDiaClick = this._onAddDiaClick.bind(this)\n        this._onRemoveClick = this._onRemoveClick.bind(this)\n        this._onCloseClick = this._onCloseClick.bind(this)\n        this._onValChange = this._onValChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.getDatabase();\n    }\n\n    getDatabase = () => {\n        fetch('observatory')\n        .then(response => response.json())\n        .then(response => this.setState({db: response.data.reverse()}))\n        .catch(err => console.error(err))\n    \n        fetch('circular')\n        .then(response => response.json())\n        .then(response => this.setState({circulars: response.data.reverse()}))\n        .catch(err => console.error(err))\n    }\n\n    _initDatabase() {\n        const { db } = this.state\n        if (db.length !== 0){\n            this._sortList()\n            this.setState({init:true})\n        }\n    }\n\n    _sortList() {\n        const { sortDirection } = this.state\n        const { db } = this.state\n        \n        const sorted_db = db.sort(function(a, b){\n            if (sortDirection === SortDirection.DESC){\n                return parseInt(b.id, 10) - parseInt(a.id, 10)\n            } else {\n                return parseInt(a.id, 10) - parseInt(b.id, 10)\n            }\n        })\n\n        this.setState({db: sorted_db})\n\n        const { db_selected } = this.state\n\n        if (db_selected.length === 0){\n            this.setState({db_selected: sorted_db})\n        } else {\n            this.setState({db_selected:\n                db_selected.sort(\n                function(a, b){\n                    if (sortDirection === SortDirection.DESC){\n                        return parseInt(a.id, 10) - parseInt(b.id, 10)\n                    } else {\n                        return parseInt(b.id, 10) - parseInt(a.id, 10)\n                    }\n                })\n            })\n        }\n\n        \n    }\n    \n    _sortData({ sortBy, sortDirection }) {\n        this._sortList()\n        this.setState({ sortBy, sortDirection});\n    }\n\n    _rowClassName({index}) {\n        if (index < 0) {\n            return styles.headerRow;\n        } else {\n            return index % 2 === 0 ? styles.evenRow : styles.oddRow;\n        }\n    }\n\n    _onScrollToRowChange(e) {\n\n        const { db_selected, ordered } = this.state;\n        const rowCount =  db_selected.length\n        const enteredIdx = parseInt(e.target.value, 10)\n        var Index = undefined\n\n        const scrollTo = db_selected.filter((element) => {return element.id === enteredIdx})[0]\n        \n        if(typeof scrollTo !== \"undefined\")\n            Index = scrollTo.id\n        \n        let scrollToIndex = Math.max(\n          0,\n          (rowCount - Index - 1 || 0),\n        );\n\n        if (!ordered)\n            scrollToIndex = rowCount-scrollToIndex-1\n\n        if (isNaN(scrollToIndex)) {\n          scrollToIndex = undefined;\n        }\n\n        this.setState({scrollToIndex});\n        this.setState({enteredIdx});\n    }\n\n    _searchFor(e) {\n        const { db } = this.state\n        const searchText = e.target.value\n\n        this.setState({db_selected: db.filter((element) => {\n            return (element.telescope.indexOf(searchText) !== -1)\n        })\n        })\n\n        this.setState({searchText});\n    }\n\n\n    _headerRenderer({ label, dataKey, sortBy, sortDirection }) {\n        return (\n            <div>\n            { label }\n            { sortBy === dataKey && <SortIndicator sortDirection={sortDirection} />}\n            </div>\n        );\n    }\n\n    _onRowClick ({rowData, index}) {\n        const { selectedIdx } = this.state\n        if ( selectedIdx === index ) {\n            this.setState({selectedIdx: -1})\n        } else {\n            this.setState({selectedIdx: index}) \n            this.setState({editDialog: true})\n            this.setState({tel: rowData.telescope, dtr: rowData.detector,\n            fullName: rowData.full_name,\n            mw: rowData.wavelength, mm: rowData.messenger, mwid: rowData.mwid})\n        }\n    }\n\n    _onAddClick () {\n        this.setState({addDialog: true})\n    }\n\n    _onAddDiaClick () {\n        var { tel, dtr, mw, mm, fullName, mwid } = this.state\n        var { db, db_selected, circulars } = this.state\n        var id\n\n        if (mwid >= 7){\n            id = Math.max(db[db.length-1].id, db[0].id)+1\n        } else {\n            const db_EM = db.filter((element) => {return (element.id<= 900)})\n            id = Math.max(db_EM[db_EM.length-1].id, db_EM[0].id)+1\n        }\n        \n        \n        if (dtr===undefined){\n            dtr = null\n        }\n\n        var added_db = {id: id, telescope: tel, detector: dtr, \n            fullName: fullName, mwid: mwid, mode: 1}\n\n        fetch('observatory/'+id, \n            {\n                method: 'POST', \n                body: JSON.stringify(added_db),\n                headers: { 'content-type': 'application/json' }\n            })\n            .catch(err => console.log(err));\n        \n        added_db = {id: id, telescope: tel, detector: dtr, \n            full_name: fullName, wavelength: mw, messenger: mm, mwid: mwid}\n        \n        db.unshift(added_db)\n\n        const searchCirs = circulars.filter((element) => {return (element.subject.indexOf(\" \"+tel+\" \") !== -1)})\n        var len = searchCirs.length;\n        for (var i = 0; i < len; i++){\n            var circular = searchCirs[i]\n            circular.obsid = id\n            circular.mwid = mwid\n            \n            fetch('circular/'+circular.id, \n            {\n                method: 'POST', \n                body: JSON.stringify(circular),\n                headers: { 'content-type': 'application/json' }\n            })\n            .catch(err => console.log(err));\n\n        }\n\n        this.setState({db, db_selected})\n        this.setState({addDialog:false})\n\n        this.setState({tel: undefined, dtr: undefined, fullName: undefined,\n            mw: undefined, mm: undefined, mwid: undefined})\n    }\n\n    _onModifyClick (e) {\n        e.preventDefault()\n        const { tel, dtr, mw, mm, mwid, fullName } = this.state\n        var { db, db_selected } = this.state\n        const id=e.target.getAttribute(\"id\")\n\n        console.log(mwid)\n\n        const updated_db = {id: id, telescope: tel, detector: dtr, \n            fullName: fullName, wavelength: mw, messenger: mm, mwid:mwid, mode:0}\n\n        fetch('observatory/'+id, \n            {\n                method: 'POST', \n                body: JSON.stringify(updated_db),\n                headers: { 'content-type': 'application/json' }\n            })\n            .catch(err => console.log(err));\n\n        db.forEach(function (element) {\n            \n            if (element.id === parseInt(id, 10)) {\n                element.telescope = tel\n                element.detector = dtr\n                element.full_name = fullName\n                element.wavelength = mw\n                element.messenger = mm\n                element.mwid = mwid\n            }\n        })\n\n        db_selected.forEach(function (element) {\n            \n            if (element.id === parseInt(id, 10)) {\n                element.telescope = tel\n                element.detector = dtr\n                element.full_name = fullName\n                element.wavelength = mw\n                element.messenger = mm\n            }\n        })\n        \n        this.setState({db, db_selected})\n        this.setState({editDialog:false})\n        this.setState({selectedIdx:-1})\n\n        this.setState({tel: undefined, dtr: undefined, fullName:undefined,\n            mw: undefined, mm: undefined})\n    }\n\n    _onRemoveClick (e) {\n        e.preventDefault()\n        var { db, db_selected, circulars } = this.state\n        const id=e.target.getAttribute(\"id\")\n        \n        const removed = db.filter((element) => {return parseInt(element.id, 10) === parseInt(id, 10)})[0]\n        db.splice(db.indexOf(removed), 1)    \n\n        const removed_db = {id: id, mode:-1}\n        fetch('observatory/'+id, \n            {\n                method: 'POST', \n                body: JSON.stringify(removed_db),\n                headers: { 'content-type': 'application/json' }\n            })\n            .catch(err => console.log(err));\n\n\n        const searchCirs = circulars.filter((element) => {return (element.obsid === id)})\n        var len = searchCirs.length;\n        for (var i = 0; i < len; i++){\n            var circular = searchCirs[i]\n            console.log(circular)\n            circular.obsid = undefined\n            circular.mwid = undefined\n            circular.telescope = undefined\n            circular.detector = undefined\n            circular.messenger = undefined\n            circular.wavelength = undefined\n            fetch('circular/'+circular.id, \n            {\n                method: 'POST', \n                body: JSON.stringify(circular),\n                headers: { 'content-type': 'application/json' }\n            })\n            .catch(err => console.log(err));\n\n        }\n\n        this.setState({db, db_selected})\n        this.setState({editDialog: false})\n        this.setState({selectedIdx:-1})\n\n        this.setState({tel: undefined, dtr: undefined, fullName:undefined,\n            mw: undefined, mm: undefined})\n    }\n\n    _onCloseClick () {\n        this.setState({editDialog:false})\n        this.setState({addDialog:false})\n        this.setState({removeDialog:false})\n        this.setState({selectedIdx:-1})\n        this.setState({tel: undefined, dtr: undefined, fullName: undefined,\n            mw: undefined, mm: undefined})\n    }\n\n\n    _onValChange (e) {\n        const name = e.target.name\n        const value = e.target.value\n        const mmmw = [\"radio\", \"optical\", \"X-ray\", \"γ-ray\", \"HE\", \"VHE\"]\n\n        if (name===\"tel\"){\n            this.setState({tel: value})\n        } else if (name===\"dtr\"){\n            this.setState({dtr: value})\n        } else if (name===\"fullName\"){\n            this.setState({fullName: value})\n        } else if (name===\"mw\"){\n            this.setState({mwid: mmmw.indexOf(value)+1, mw: value, mm: \"EM\"})\n        } else if (name===\"mm\"){\n            if (value===\"EM\"){\n                this.setState({mm: value})\n            } else if (value===\"GW\"){\n                this.setState({mwid: 7, mm: value, mw: undefined})\n            } else if (value===\"ν\") {\n                this.setState({mwid: 8, mm: value, mw: undefined})\n            }\n            \n        }\n    }\n    \n    rowRenderer = prevProps => {\n        const { index, style, key, rowData, className } = prevProps\n        const { selectedIdx, tel, dtr, mw, mm, fullName } = this.state\n\n        if (index === selectedIdx) {\n            return (\n            <div\n            style={{ ...style, display: \"flex\", flexDirection: \"column\" }}\n            key={key}\n            className={className}\n            >\n            {defaultTableRowRenderer({\n            ...prevProps,\n            style: {width:style.width, height:style.height, color:'white', fontWeight: \"bold\", backgroundColor: '#5c6bc0'}\n            })}\n            <Dialog\n            open={ this.state.editDialog }\n            maxWidth={\"md\"}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle><div style={{fontSize:\"0.9em\"}}>Observatory ID: {rowData.id}</div></DialogTitle>\n                <DialogContent>\n                <TextField\n                    margin=\"dense\"\n                    id=\"tel\"\n                    label=\"Telescope\"\n                    type=\"text\"\n                    fullWidth\n                    value={ tel }\n                    name=\"tel\"\n                    onChange={this._onValChange}\n                    style={{paddingBottom:\"10pt\"}}\n                  />\n                <TextField\n                    margin=\"dense\"\n                    id=\"dtr\"\n                    label=\"Detector\"\n                    type=\"text\"\n                    fullWidth\n                    value={ dtr }\n                    name=\"dtr\"\n                    onChange={this._onValChange}\n                    style={{paddingBottom:\"10pt\"}}\n                />\n                <TextField\n                    margin=\"dense\"\n                    id=\"fullName\"\n                    label=\"Full name\"\n                    type=\"text\"\n                    fullWidth\n                    value={ fullName }\n                    name=\"fullName\"\n                    onChange={this._onValChange}\n                    style={{paddingBottom:\"10pt\"}}\n                />\n\n                <InputLabel style={{fontSize: \"0.75em\"}}>Wavelength</InputLabel>\n                <Select\n                    value={ mw }\n                    name=\"mw\"\n                    label=\"Wavelength\"\n                    onChange={this._onValChange}\n                >\n                    <MenuItem value={false} name=\"mw\"></MenuItem>\n                    <MenuItem value=\"radio\" name=\"mw\">radio</MenuItem>\n                    <MenuItem value=\"optical\" name=\"mw\">optical</MenuItem>\n                    <MenuItem value=\"X-ray\" name=\"mw\">X-ray</MenuItem>\n                    <MenuItem value=\"γ-ray\" name=\"mw\">γ-ray</MenuItem>\n                    <MenuItem value=\"HE\" name=\"mw\">HE</MenuItem>\n                    <MenuItem value=\"VHE\" name=\"mw\">VHE</MenuItem>\n                </Select>\n                <div style={{paddingBottom:\"10pt\"}}></div>\n                <InputLabel style={{fontSize: \"0.75em\"}}>Messenger</InputLabel>\n                <Select\n                    value={ mm }\n                    name=\"mm\"\n                    label=\"Messenger\"\n                    onChange={this._onValChange}\n                >\n                    <MenuItem value={false} name=\"mm\"></MenuItem>\n                    <MenuItem value=\"EM\" name=\"mm\">EM</MenuItem>\n                    <MenuItem value=\"GW\" name=\"mm\">GW</MenuItem>\n                    <MenuItem value=\"ν\" name=\"mm\">ν</MenuItem>\n                </Select>\n                </DialogContent>\n                <DialogActions>\n                <Button onClick={this._onModifyClick} color=\"primary\">\n                <div id={rowData.id}>Modify</div>\n                </Button>\n                <Button onClick={this._onRemoveClick} color=\"primary\">\n                <div id={rowData.id}>Remove</div>\n                </Button>\n                <Button onClick={this._onCloseClick} color=\"primary\" autoFocus>\n                Close\n                </Button>\n                </DialogActions>\n            </Dialog>\n            </div>\n        );\n        } else{\n            return defaultTableRowRenderer({...prevProps, style:{...style}});    \n        }\n    };\n\n    render() {\n\n        const { db, db_selected, init, sortBy, sortDirection, searchText, scrollToIndex, enteredIdx } = this.state\n        const { tel, dtr, mw, mm, fullName } = this.state\n\n        if (init===false){\n            this._initDatabase()\n        } \n\n        const _getDatum = index => db_selected[index % db_selected.length];\n        \n        const rowGetter = ({ index }) => _getDatum(index);\n\n        if (db.length === 0){\n            return <CoffeeLoading />\n        } else {\n            return (\n            <div>\n                <InputRow>\n                <div class={ styles.cboxContainer }>\n                <LabeledInput\n                    label=\"Index to\"\n                    name=\"onScrollToRow\"\n                    placeholder=\"Index...\"\n                    onChange={this._onScrollToRowChange}\n                    value={enteredIdx || ''}\n                  />\n                </div>\n                <div class={ styles.cboxContainer }>\n                <LabeledInput\n                    label=\"Search for\"\n                    name=\"searchRow\"\n                    placeholder=\"e.g., Swift, Fermi, ...\"\n                    onChange={this._searchFor}\n                    value={searchText || ''}\n                  />\n                </div>\n                <div style={{marginLeft:\"auto\", marginRight:\"0\"}}>\n                    <Button onClick={this._onAddClick} color=\"primary\">\n                    <div><AddIcon /></div>\n                    </Button>\n                </div>\n                </InputRow>\n                \n                <div>\n                    <Dialog\n                    open={ this.state.addDialog }\n                    maxWidth={\"md\"}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                    >\n                    <DialogTitle id=\"alert-dialog-title\"><div style={{fontSize:\"0.9em\"}}>Add observatory</div></DialogTitle>\n                    <DialogContent>\n                    <TextField\n                        margin=\"dense\"\n                        id=\"tel\"\n                        label=\"Telescope\"\n                        type=\"text\"\n                        fullWidth\n                        value={ tel }\n                        name=\"tel\"\n                        onChange={this._onValChange}\n                        style={{paddingBottom:\"10pt\"}}\n                      />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"dtr\"\n                        label=\"Detector\"\n                        type=\"text\"\n                        fullWidth\n                        value={ dtr }\n                        name=\"dtr\"\n                        onChange={this._onValChange}\n                        style={{paddingBottom:\"10pt\"}}\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        id=\"fullName\"\n                        label=\"Full name\"\n                        type=\"text\"\n                        fullWidth\n                        value={ fullName }\n                        name=\"fullName\"\n                        onChange={this._onValChange}\n                        style={{paddingBottom:\"10pt\"}}\n                    />\n\n                    <InputLabel style={{fontSize: \"0.75em\"}}>Wavelength</InputLabel>\n                    <Select\n                        value={ mw }\n                        name=\"mw\"\n                        label=\"Wavelength\"\n                        onChange={this._onValChange}\n                    >\n                        <MenuItem value={false} name=\"mw\"></MenuItem>\n                        <MenuItem value=\"radio\" name=\"mw\">radio</MenuItem>\n                        <MenuItem value=\"optical\" name=\"mw\">optical</MenuItem>\n                        <MenuItem value=\"X-ray\" name=\"mw\">X-ray</MenuItem>\n                        <MenuItem value=\"γ-ray\" name=\"mw\">γ-ray</MenuItem>\n                        <MenuItem value=\"HE\" name=\"mw\">HE</MenuItem>\n                        <MenuItem value=\"VHE\" name=\"mw\">VHE</MenuItem>\n                    </Select>\n                    <div style={{paddingBottom:\"10pt\"}}></div>\n                    <InputLabel style={{fontSize: \"0.75em\"}}>Messenger</InputLabel>\n                    <Select\n                        value={ mm }\n                        name=\"mm\"\n                        label=\"Messenger\"\n                        onChange={this._onValChange}\n                    >\n                        <MenuItem value={false} name=\"mm\"></MenuItem>\n                        <MenuItem value=\"EM\" name=\"mm\">EM</MenuItem>\n                        <MenuItem value=\"GW\" name=\"mm\">GW</MenuItem>\n                        <MenuItem value=\"ν\" name=\"mm\">ν</MenuItem>\n                    </Select>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this._onAddDiaClick} color=\"primary\">\n                    Add\n                    </Button>\n                    <Button onClick={this._onCloseClick} color=\"primary\" autoFocus>\n                    Close\n                    </Button>\n                    </DialogActions>\n                    </Dialog>\n                </div>\n\n                <AutoSizer disableHeight>\n                {({width}) => (\n                <Table\n                width={width}\n                height={600}\n                headerHeight={30}\n                rowHeight={30}\n                rowCount={db_selected.length}\n                rowGetter={rowGetter}\n                sort={this._sortData}\n                sortBy={sortBy}\n                rowRenderer={this.rowRenderer}\n                onRowClick={this._onRowClick}\n                sortDirection={sortDirection}\n                rowClassName={this._rowClassName}\n                scrollToIndex={scrollToIndex}\n                >\n\n                 <Column\n                    disableSort={false}\n                    headerRenderer={this._headerRenderer}\n                    label=\"#\"\n                    dataKey=\"id\"\n                    width={50} \n                />\n\n                <Column \n                    disableSort\n                    label=\"Telescope\" \n                    dataKey=\"telescope\" \n                    width={200}\n                />\n\n                <Column \n                    disableSort\n                    label=\"Detector\" \n                    dataKey=\"detector\" \n                    width={200}\n                />\n\n                <Column \n                    disableSort\n                    label=\"Full name\" \n                    dataKey=\"full_name\" \n                    width={500}\n                />\n\n                <Column \n                    disableSort\n                    label=\"Wavelength\" \n                    dataKey=\"wavelength\" \n                    width={150}\n                />\n\n                <Column\n                    disableSort\n                    label=\"Messenger\"\n                    dataKey=\"messenger\"\n                    width={150} \n                />\n\n                </Table>\n                )}\n                </AutoSizer>\n            </div>\n        )}\n    }\n}\n\nexport default OBS_TABLE;\n","/** @flow */\n\nimport React, { Component } from 'react';\nimport {Table, Column, AutoSizer, defaultTableRowRenderer, SortDirection, SortIndicator} from 'react-virtualized';\nimport 'react-virtualized/styles.css';\nimport { LabeledInput, InputRow } from './LabeledInput'\nimport styles from './TABLE.module.css'\nimport { CoffeeLoading } from 'react-loadingg';\n\nclass NOTICE_TABLE extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            db: [],\n            db_selected: [],\n            init: false,\n            ordered: true,\n            sortBy: \"id\",\n            sortDirection: SortDirection.DESC,\n            selectedIdx: -1,\n            searchText: undefined,\n            enteredIdx: undefined, \n            scrollToIndex:undefined, \n\n        }\n\n        this._rowClassName = this._rowClassName.bind(this)\n        this._searchFor = this._searchFor.bind(this)\n        this._sortData = this._sortData.bind(this)\n        this._onRowClick = this._onRowClick.bind(this)\n        this._headerRenderer = this._headerRenderer.bind(this)\n        this._onScrollToRowChange = this._onScrollToRowChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.getDatabase();\n    }\n\n    getDatabase = () => {\n        fetch('notice')\n        .then(response => response.json())\n        .then(response => this.setState({db: response.data.reverse()}))\n        .catch(err => console.error(err))\n    }\n\n    _copyDatabase() {\n        const { db } = this.state\n        if (db.length > 0) {\n            this.setState({init:true, db_selected: db})    \n        }\n    }\n\n    _sortData({ sortBy, sortDirection }) {\n        let { db, ordered, db_selected } = this.state\n        ordered = !ordered\n        db= db.reverse()\n        db_selected= db_selected.reverse()\n        this.setState({ sortBy, sortDirection, ordered, db, db_selected});\n    }\n\n    rowRenderer = prevProps => {\n        const { index, style } = prevProps\n        const { selectedIdx } = this.state\n\n        if (index === selectedIdx) {\n            return defaultTableRowRenderer({...prevProps, style:{...style, color:'white', fontWeight: \"bold\", backgroundColor: '#5c6bc0'}})\n        } else {\n            return defaultTableRowRenderer({...prevProps, style:{...style}});    \n        }\n    };\n\n    _rowClassName({index}) {\n        if (index < 0) {\n            return styles.headerRow;\n        } else {\n            return index % 2 === 0 ? styles.evenRow : styles.oddRow;\n        }\n    }\n\n    _onScrollToRowChange(e) {\n\n        const { db_selected, ordered } = this.state;\n        const rowCount =  db_selected.length\n        const enteredIdx = parseInt(e.target.value, 10)\n        var Index = undefined\n\n        const scrollTo = db_selected.filter((element) => {return element.id === enteredIdx})[0]\n        \n        if(typeof scrollTo !== \"undefined\")\n            Index = scrollTo.id\n        \n        let scrollToIndex = Math.max(\n          0,\n          (rowCount - Index - 1 || 0),\n        );\n\n        if (!ordered)\n            scrollToIndex = rowCount-scrollToIndex-1\n\n        if (isNaN(scrollToIndex)) {\n          scrollToIndex = undefined;\n        }\n        console.log(scrollToIndex)\n\n        this.setState({scrollToIndex});\n        this.setState({enteredIdx});\n    }\n\n    _searchFor(e) {\n        const { db } = this.state\n        const searchText = e.target.value\n\n        this.setState({db_selected: db.filter((element) => {\n            return (element.mission.indexOf(searchText) !== -1)\n        })\n        })\n\n        this.setState({searchText});\n    }\n\n\n    _onRowClick ({index}) {\n        const { selectedIdx } = this.state\n        if ( selectedIdx === index ) {\n            this.setState({selectedIdx: -1})\n        } else {\n            this.setState({selectedIdx: index}) \n        }\n    }\n\n\n    _headerRenderer({ label, dataKey, sortBy, sortDirection }) {\n        return (\n            <div>\n            { label }\n            { sortBy === dataKey && <SortIndicator sortDirection={sortDirection} />}\n            </div>\n        );\n    }\n\n    render() {\n\n        const { db, db_selected, init, sortBy, sortDirection, searchText, scrollToIndex, enteredIdx } = this.state\n\n        if (init===false){\n            this._copyDatabase()\n        } \n\n        const _getDatum = index => db_selected[index % db_selected.length];\n        \n        const rowGetter = ({ index }) => _getDatum(index);\n        if (db.length === 0){\n            return <CoffeeLoading />\n        } else {\n            return (\n            <div>\n                <InputRow>\n                <div class={ styles.cboxContainer }>\n                <LabeledInput\n                    label=\"Index to\"\n                    name=\"onScrollToRow\"\n                    placeholder=\"Index...\"\n                    onChange={this._onScrollToRowChange}\n                    value={enteredIdx || ''}\n                  />\n                </div>\n                <div class={ styles.cboxContainer }>\n                <LabeledInput\n                    label=\"Search for\"\n                    name=\"searchRow\"\n                    placeholder=\"e.g., Swift, Fermi, ...\"\n                    onChange={this._searchFor}\n                    value={searchText || ''}\n                  />\n                </div>\n                </InputRow>\n\n                <AutoSizer disableHeight>\n                {({width}) => (\n                <Table\n                width={width}\n                height={600}\n                headerHeight={30}\n                rowHeight={30}\n                rowCount={db_selected.length}\n                rowGetter={rowGetter}\n                sort={this._sortData}\n                sortBy={sortBy}\n                rowRenderer={this.rowRenderer}\n                onRowClick={this._onRowClick}\n                sortDirection={sortDirection}\n                rowClassName={this._rowClassName}\n                scrollToIndex={scrollToIndex}\n                >\n\n                 <Column\n                    disableSort={false}\n                    headerRenderer={this._headerRenderer}\n                    label=\"#\"\n                    dataKey=\"id\"\n                    width={150} \n                />\n\n\n                <Column \n                    disableSort\n                    label=\"Mission\" \n                    dataKey=\"mission\" \n                    width={200}\n                />\n\n\n                </Table>\n                )}\n                </AutoSizer>\n            </div>\n        )}\n    }\n}\n\nexport default NOTICE_TABLE;\n","import React, { Component } from 'react';\nimport GCN_TABLE from './GCN_TABLE';\nimport EVENT_TABLE from './EVENT_TABLE';\nimport CIRC_TABLE from './CIRC_TABLE';\nimport OBS_TABLE from './OBS_TABLE';\nimport NOTICE_TABLE from './NOTICE_TABLE';\n\nclass ADMIN extends Component {\n    \n    render() {\n        if (this.props.adminTable === 0){\n            return <GCN_TABLE />  \n        } else if (this.props.adminTable === 1){\n            return <EVENT_TABLE />  \n        } else if (this.props.adminTable === 2){\n            return <CIRC_TABLE />  \n        } else if (this.props.adminTable === 3){\n            return <OBS_TABLE />  \n        } else if (this.props.adminTable === 4){\n            return <NOTICE_TABLE />  \n        }\n    }\n}\n\nexport default ADMIN;\n\n\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ListIcon from '@material-ui/icons/List';\n\nexport const mainListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <DashboardIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"GCN Viewer\" />\n    </ListItem>\n  </div>\n);\n\nexport const adminListItems = (\n  <div>\n    <ListItem button>\n      <ListItemIcon>\n        <ListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Event Table\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Circular Table\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Observatory Table\" />\n    </ListItem>\n    <ListItem button>\n      <ListItemIcon>\n        <ListIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Notice Table\" />\n    </ListItem>\n  </div>\n);","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport './App.css'\nimport GCN_TABLE from './components/GCN_TABLE';\nimport ADMIN from './components/ADMIN';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\nimport styles from './subStyle.module.css'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { mainListItems, adminListItems } from './components/LISTITEMS';\n\nconst useStyles = theme => ({\n  root: {\n    display: 'flex',\n  },\n\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n\n  appBarShift: {\n    width: `calc(100% - ${240}px)`,\n    marginLeft: 240,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n\n  title: {\n    flexGrow: 1,\n  },\n\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -240,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tadminDia: false,\n\t\t\tadminMode: false,\n\t\t\tadminTable: 0,\n\t\t\tpwd: '',\n\t\t\tenteredPwd: '',\n\t\t};\n\t\tthis.modeChange = this.modeChange.bind(this);\n\t\tthis.checkPwd = this.checkPwd.bind(this);\n\t}\n\n\n\tmodeChange () {\n\t\tconst { adminMode } = this.state\n\t\tif (adminMode){\n\t\t\tthis.setState({adminMode:false})\n\t\t} else {\n\t\t\tthis.setState({adminDia:true});\n\t\t}\n\t}\n\n\tcheckPwd = (e) => {\n\t\te.preventDefault();\n\t\tconst {pwd, enteredPwd} = this.state;\n\t\tif (pwd === enteredPwd){\n\t\t\tthis.setState({adminMode:true})\n\t\t}\n\n\t\tthis.setState({adminDia:false, enteredPwd:''})\n\t}\n\n\tsearchTable = (e) =>{\n\t\tconst selectedTable = e.target.textContent\n\n\t\tif (selectedTable === \"GCN Viewer\"){\n\t\t\tthis.setState({adminTable: 0})\n\t\t} else if (selectedTable === \"Event Table\"){\n\t\t\tthis.setState({adminTable: 1})\n\t\t} else if (selectedTable === \"Circular Table\"){\n\t\t\tthis.setState({adminTable: 2})\n\t\t} else if (selectedTable === \"Observatory Table\"){\n\t\t\tthis.setState({adminTable: 3})\n\t\t} else if (selectedTable === \"Notice Table\"){\n\t\t\tthis.setState({adminTable: 4})\n\t\t}\n\n\t}\n\t\n\trender(){\n\t\tconst { adminMode, adminTable } = this.state;\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar         \n\t\t\t\tposition=\"fixed\"\n\t\t        className={clsx(classes.appBar, {[classes.appBarShift]: adminMode})}\n\t        >\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t<Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n\t\t\t\t<div style={{fontSize: \"1.2em\", fontWeight:\"1000\", paddingBottom:\"-5pt\"}}> GCN Circular Viewer </div>\n\t\t\t\t<div style={{fontSize: \"0.8em\", fontWeight:\"100\"}}> Time-domain Astronomy Coordination Hub (TACH) </div>\n\t\t\t\t</Typography>\n\t\t\t\t<IconButton\n\t\t            color=\"inherit\"\n\t\t            aria-label=\"open drawer\"\n\t\t            onClick={ this.modeChange }\n\t\t            edge=\"end\"\n\t\t            className={clsx(classes.menuButton, adminMode && classes.hide)}\n          \t\t>\n\t\t\t\t\t<SupervisorAccountIcon />\n\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Drawer\n\t\t\t\tclassName={classes.drawer}\n\t\t        variant=\"persistent\"\n\t\t        anchor=\"left\"\n\t\t        open={adminMode}\n\t\t        classes={{\n\t\t          paper: classes.drawerPaper,\n\t\t        }}\n\t        >\n\t        <div className={classes.drawerHeader}>\n\t\t\t\t<IconButton onClick={this.modeChange}>\n\t            \t<ExitToAppIcon />\n\t        \t</IconButton>\n\t        </div>\n\t        <Divider />\n\t        <List onClick= {e => this.searchTable(e)}>{mainListItems}</List>\n\t        <Divider />\n\t        <List onClick= {e => this.searchTable(e)}>{adminListItems}</List>\n\t      \t</Drawer>\n\t      \t<main\n        \t\tclassName={clsx(classes.content, {\n          \t\t[classes.contentShift]: adminMode, })}\n      \t\t>\n        \t<div className={classes.drawerHeader} />\n\t      \t\n\t\t\t{(adminMode) ? <ADMIN adminTable={adminTable} />:<GCN_TABLE />}\n\n\t\t\t<div>\n\t\t\t\t<Dialog\n\t            open={ this.state.adminDia }\n\t            maxWidth={\"md\"}\n\t            aria-labelledby=\"alert-dialog-title\"\n\t            aria-describedby=\"alert-dialog-description\"\n\t            >\n\t            <DialogTitle id=\"alert-dialog-title\"><div style={{fontSize:\"0.9em\"}}>Admin</div></DialogTitle>\n\t                <DialogContent>\n\t                <Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t      <CssBaseline />\n\t\t\t\t      <div className={styles.paper}>\n\t\t\t\t        <form noValidate>\n\t\t\t\t          <TextField\n\t\t\t\t            variant=\"outlined\"\n\t\t\t\t            margin=\"normal\"\n\t\t\t\t            required\n\t\t\t\t            fullWidth\n\t\t\t\t            name=\"password\"\n\t\t\t\t            label=\"Password\"\n\t\t\t\t            type=\"password\"\n\t\t\t\t            id=\"password\"\n\t\t\t\t            autoComplete=\"current-password\"\n\t\t\t\t            size=\"small\"\n\t\t\t\t            value={this.state.enteredPwd}\n\t\t\t\t            onChange = {(evt) => this.setState({enteredPwd: evt.currentTarget.value})}\n\t\t\t\t          />\n\t\t\t\t          <Button\n\t\t\t\t            type=\"submit\"\n\t\t\t\t            fullWidth\n\t\t\t\t            variant=\"contained\"\n\t\t\t\t            color=\"primary\"\n\t\t\t\t            size=\"small\"\n\t\t\t\t            onClick = {e => this.checkPwd(e)}\n\t\t\t\t          >\n\t\t\t\t            Enter\n\t\t\t\t          </Button>\n\t\t\t\t        </form>\n\t\t\t\t      </div>\n\t\t\t\t    </Container>\n\t\t\t\t    </DialogContent>\n\t            </Dialog>\n            </div>\n            \n            <Box pt={4}>\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"right\">\n\t\t\tContact: Donggeun Tak  \n\t\t\t<a href=\"mailto:donggeun.tak@gmail.com\"><MailOutlineIcon style={{color:\"#454545\", fontSize:\"10pt\"}}/></a>\n\t        </Typography> \n\t        \n          \t</Box>\n          \t</main>\n\t\t</div>\n\t\t);\n\t};\n\n}\n\n\n\nexport default withStyles(useStyles)(App);\n\n\n\n    \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LabeledInput\":\"LabeledInput_LabeledInput__1GzW9\",\"Label\":\"LabeledInput_Label__2Xb44\",\"Input\":\"LabeledInput_Input__DOyMm\",\"LabelDisabled\":\"LabeledInput_LabelDisabled__8-PL_\",\"InputRow\":\"LabeledInput_InputRow__2OBM1\"};"],"sourceRoot":""}